{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rxjs/util/errorObject.js","webpack:///./node_modules/rxjs/util/isFunction.js","webpack:///./node_modules/rxjs/util/root.js","webpack:///./node_modules/rxjs/Observable.js","webpack:///./node_modules/rxjs/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/Observer.js","webpack:///./node_modules/rxjs/util/tryCatch.js","webpack:///./node_modules/rxjs/Subscription.js","webpack:///./node_modules/rxjs/observable/FromEventObservable.js","webpack:///./node_modules/rxjs/observable/fromEvent.js","webpack:///./node_modules/rxjs/add/observable/fromEvent.js","webpack:///./node_modules/rxjs/util/noop.js","webpack:///./node_modules/rxjs/util/pipe.js","webpack:///./node_modules/rxjs/symbol/observable.js","webpack:///./node_modules/rxjs/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/util/isObject.js","webpack:///./node_modules/rxjs/util/isArray.js","webpack:///./node_modules/rxjs/Subscriber.js","webpack:///./node_modules/rxjs/util/toSubscriber.js","webpack:///./usr/local/lib/node_modules/webpack/buildin/global.js","webpack:///./src/js/classes/Game.js","webpack:///./src/js/app.js","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","errorObject","e","isFunction","x","__window","window","__self","self","WorkerGlobalScope","_root","global","root","Error","root_1","toSubscriber_1","observable_1","pipe_1","Observable","subscribe","this","_isScalar","_subscribe","lift","operator","observable","source","observerOrNext","error","complete","sink","toSubscriber","add","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","forEach","next","PromiseCtor","_this","Rx","config","Promise","resolve","reject","subscription","unsubscribe","subscriber","pipe","operations","_i","arguments","length","pipeFromArray","toPromise","create","Symbol","rxSubscriber","for","$$rxSubscriber","empty","closed","tryCatchTarget","errorObject_1","tryCatcher","apply","tryCatch","fn","isArray_1","isObject_1","isFunction_1","tryCatch_1","UnsubscriptionError_1","Subscription","_parent","_parents","_subscriptions","_unsubscribe","errors","hasErrors","index","len","remove","UnsubscriptionError","flattenUnsubscriptionErrors","isArray","sub","isObject","concat","push","teardown","EMPTY","_typeof","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","reduce","errs","__extends","b","__","constructor","Observable_1","Subscription_1","toString","FromEventObservable","_super","sourceObj","eventName","selector","options","target","undefined","setupSubscription","handler","isNodeList","isHTMLCollection","addEventListener","removeEventListener","isEventTarget","source_1","on","off","isJQueryStyleEventEmitter","source_2","addListener","removeListener","isNodeStyleEventEmitter","TypeError","source_3","args","result","FromEventObservable_1","fromEvent","fromEvent_1","noop","noop_1","fns","input","prev","getSymbolObservable","context","$$observable","map","join","stack","message","Array","Observer_1","rxSubscriber_1","Subscriber","destinationOrNext","isStopped","destination","SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","Subscriber_1","nextOrObserver","g","Function","eval","Game","canvas","_classCallCheck","getContext","resizeCanvas","fillArea","width","innerWidth","height","innerHeight","color","y","fillStyle","fillRect","_Game","document","querySelector","_Game2","default","init"],"mappings":"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","file":"script.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar isFunction_1 = require('../util/isFunction');\nvar errorObject_1 = require('../util/errorObject');\nvar Subscription_1 = require('../Subscription');\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map","\"use strict\";\nvar FromEventObservable_1 = require('./FromEventObservable');\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import {Observable, Subject} from \"rxjs/Observable\";\nimport 'rxjs/add/observable/fromEvent';\n\nexport default class Game {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.context = canvas.getContext('2d');\n  }\n\n  init() {\n    this.resizeCanvas();\n    this.fillArea('rgba(0,0,255,.8)',0,0,100,100);\n    this.fillArea('rgba(0,255,0,.5)',50,50,100,100);\n  }\n\n  resizeCanvas(width = window.innerWidth, height = window.innerHeight) {\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  fillArea(\n    color = \"green\",\n    x = 0, y = 0,\n    width = window.innerWidth, height = window.innerHeight) {\n    this.context.fillStyle = color;\n    this.context.fillRect(x,y,width,height);\n  }\n}\n","import Game from './classes/Game';\nconst canvas = document.querySelector('canvas');\nconst game = new Game(canvas);\n\ngame.init();\n","import './js/app.js';\nimport './css/master.css';\n"],"sourceRoot":""}